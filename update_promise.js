@find_by_credentials: (email, password) -> pg.connectAsync(connection_string).bind({}) .spread (conn, release) -> @.conn = conn # keep track of this @.release = release conn.queryAsync("select * from users where email = $1", [email]) .then (result) -> return false if result.rows.length == 0 @.user = result.rows[0] bcrypt.compareAsync(password, @.user.password) .then (is_match) -> return null unless is_match @.user.token = crypto.createHash('sha256').update(Math.random().toString()).digest('hex') @.conn.queryAsync("update users set token = $1 where id = $2", [@.user.token, @.user.id]) .then -> @.user .finally -> @.release()
